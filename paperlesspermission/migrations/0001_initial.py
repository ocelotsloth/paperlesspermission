# Generated by Django 3.0.4 on 2020-05-05 22:45

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_number', models.CharField(max_length=30, unique=True)),
                ('course_name', models.CharField(max_length=200)),
                ('hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('cell_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('notify_cell', models.BooleanField()),
                ('hidden', models.BooleanField(default=False)),
                ('preferred_name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('group_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('dropoff_time', models.TimeField()),
                ('dropoff_location', models.CharField(max_length=100)),
                ('end_date', models.DateField()),
                ('pickup_time', models.TimeField()),
                ('pickup_location', models.CharField(max_length=100)),
                ('grade_levels', models.CharField(blank=True, max_length=30, null=True)),
                ('due_date', models.DateField()),
                ('hidden', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(0, 'New'), (1, 'Approved'), (2, 'Released'), (3, 'Archived')], default=0)),
                ('courses', models.ManyToManyField(blank=True, to='paperlesspermission.Course')),
                ('faculty', models.ManyToManyField(to='paperlesspermission.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('cell_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('notify_cell', models.BooleanField()),
                ('hidden', models.BooleanField(default=False)),
                ('relationship', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionSlip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True)),
                ('student_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('student_signature_date', models.DateTimeField(blank=True, null=True)),
                ('guardian_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_signature_date', models.DateTimeField(blank=True, null=True)),
                ('flagged_for_review', models.BooleanField(blank=True, default=False)),
                ('field_trip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.FieldTrip')),
                ('guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.Guardian')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('cell_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('notify_cell', models.BooleanField()),
                ('hidden', models.BooleanField(default=False)),
                ('grade_level', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_id', models.CharField(max_length=30, unique=True)),
                ('section_number', models.CharField(max_length=30)),
                ('school_year', models.CharField(max_length=30)),
                ('room', models.CharField(max_length=30)),
                ('period', models.CharField(max_length=30)),
                ('hidden', models.BooleanField(default=False)),
                ('coteacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coteacher_set', to='paperlesspermission.Faculty')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paperlesspermission.Course')),
                ('students', models.ManyToManyField(to='paperlesspermission.Student')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='paperlesspermission.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionSlipLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_id', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.Guardian')),
                ('permission_slip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.PermissionSlip')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.Student')),
            ],
        ),
        migrations.AddField(
            model_name='permissionslip',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='paperlesspermission.Student'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='students',
            field=models.ManyToManyField(to='paperlesspermission.Student'),
        ),
        migrations.AddField(
            model_name='fieldtrip',
            name='sections',
            field=models.ManyToManyField(blank=True, to='paperlesspermission.Section'),
        ),
        migrations.AddField(
            model_name='fieldtrip',
            name='students',
            field=models.ManyToManyField(blank=True, to='paperlesspermission.Student'),
        ),
        migrations.AddConstraint(
            model_name='permissionsliplink',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('guardian__isnull', True), ('student__isnull', False)), models.Q(('guardian__isnull', False), ('student__isnull', True)), _connector='OR'), name='Only tied to one person.'),
        ),
        migrations.AddConstraint(
            model_name='permissionslip',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('student_signature__isnull', True), ('student_signature_date__isnull', True)), models.Q(('student_signature__isnull', False), ('student_signature_date__isnull', False)), _connector='OR'), name='stu sig and sig date must both be null or non-null.'),
        ),
        migrations.AddConstraint(
            model_name='permissionslip',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('guardian_signature__isnull', True), ('guardian_signature_date__isnull', True), ('guardian__isnull', True)), models.Q(('guardian_signature__isnull', False), ('guardian_signature_date__isnull', False), ('guardian__isnull', False)), _connector='OR'), name='guard, guard sig and sig date must both be null or non-null.'),
        ),
        migrations.AddConstraint(
            model_name='permissionslip',
            constraint=models.UniqueConstraint(fields=('field_trip', 'student'), name='Each stu can have at most one slip per field trip.'),
        ),
    ]
